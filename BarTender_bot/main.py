# –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–∏–ª, –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞

# –ò–º–ø–æ—Ä—Ç—ã –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ 
import os
import sys
# –ò–º–ø–æ—Ä—Ç—ã —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ || –°–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∞–∏–ª property.toml
import telebot
#  –°–≤–æ–∏ –∏–º–ø–æ—Ä—Ç—ã
sys.path.insert(0, os.path.join(sys.path[0], '..'))
from BarTender_bot.Handlers.Time_handler import greeting, get_date
from BarTender_bot.Handlers.User_handler import Roles, user_log_in, user_rerole
from BarTender_bot.Handlers.Keyboard_Handler import replay_keyboard_handler
from BarTender_bot.Libs.Keyboard_lib import Markup
from BarTender_bot.Parametrs.configs import TOKEN
from Logs.logs import logoose, logus


bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=["start"])
def bot_started_command(message):
  USER = user_log_in(message)
  markup = Markup('bb, b', '–ë–∞—Ä üç∏, –°–∫–ª–∞–¥ üì¶, –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üìû', message.chat.id)
  bot.send_message(message.chat.id, f'{greeting()} {USER.get_name}. –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ {USER.get_role}', reply_markup=markup.get_markup)

@bot.message_handler(commands=["role"])
def user_rerole_inbot(message):
  user_id = message.chat.id
  markup = Markup("bb, bb, b", "–ë–∞—Ä–º–µ–Ω, –ö–ª–∞–¥–æ–≤—â–∏–∫, –ú–µ–Ω–µ–¥–∂–µ—Ä, –î–∏—Ä–µ–∫—Ç–æ—Ä, –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", user_id)
  bot.send_message(user_id, "–í—ã–±–µ—Ä–µ—Ç–µ —Ä–æ–ª—å", reply_markup=markup.get_markup)


@bot.message_handler(content_types=['text'])
def message_text(message):
  user = user_log_in(message).get_name
  # logus.debug(user)
  # logus.debug(text)
  text = str(message.text)
  markup = Markup('bb, b', '–ë–∞—Ä üç∏, –°–∫–ª–∞–¥ üì¶, –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üìû', message.chat.id)
  if text == '–ë–∞—Ä–º–µ–Ω':
    user_rerole(user, Roles.BARTENDER)
    bot.send_message(message.chat.id, f'–¢–µ–ø–µ—Ä—å –≤—ã {Roles.BARTENDER.value}', reply_markup=markup.get_markup)
  elif text == '–ö–ª–∞–¥–æ–≤—â–∏–∫':
    user_rerole(user, Roles.STOREKEEPER)
    bot.send_message(message.chat.id, f'–¢–µ–ø–µ—Ä—å –≤—ã {Roles.STOREKEEPER.value}', reply_markup=markup.get_markup)
  elif text == '–ú–µ–Ω–µ–¥–∂–µ—Ä':
    user_rerole(user, Roles.MANAGER)
    bot.send_message(message.chat.id, f'–¢–µ–ø–µ—Ä—å –≤—ã {Roles.MANAGER.value}',reply_markup=markup.get_markup)
  elif text == '–î–∏—Ä–µ–∫—Ç–æ—Ä':
    user_rerole(user, Roles.DIRECTOR)
    bot.send_message(message.chat.id, f'–¢–µ–ø–µ—Ä—å –≤—ã {Roles.DIRECTOR.value}', reply_markup=markup.get_markup)
  elif text == '–°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å':
    user_rerole(user, Roles.SUPERUSER)
    bot.send_message(message.chat.id, f'–¢–µ–ø–µ—Ä—å –≤—ã {Roles.SUPERUSER.value}', reply_markup=markup.get_markup)
  else: replay_keyboard_handler(message, bot)




if __name__ == '__main__':
  logoose(__name__, f'–ë–æ—Ç –∑–∞–ø—É—à–µ–Ω: {get_date()}, –¢–æ–∫–µ–Ω –±–æ—Ç–∞ ‚Äî {TOKEN}', 's')
  bot.infinity_polling()
  